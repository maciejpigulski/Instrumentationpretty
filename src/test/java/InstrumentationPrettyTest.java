import static org.junit.Assert.assertTrue;

import org.junit.Test;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import parser.source.InstrumentationResultParser;
import parser.source.XmlTestRunListener;

/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'james' at '12/16/18 7:41 PM' with Gradle 2.11
 *
 * @author james, @date 12/16/18 7:41 PM
 */
public class InstrumentationPrettyTest {
    @Test public void testXMLReportGeneration() throws IOException {
        File reportDir = new File("reports");
        //noinspection ResultOfMethodCallIgnored
        reportDir.mkdirs();

        XmlTestRunListener testListener = new XmlTestRunListener();
        testListener.setReportDir(reportDir);

        InstrumentationResultParser parser = new InstrumentationResultParser("Instrumentation results", testListener);

        List<String> lines = new ArrayList<>();

        //read lines from file
        File inputFile = new File("./src/test/resources/c6a3727a-0ab2-42e7-850d-10a2ba1be62c.txt");
        BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(inputFile)));
        // Reading data using readLine
        String input;
        while ((input = reader.readLine()) != null) {
            lines.add(input);
        }

        parser.processNewLines(lines.toArray(new String[0]));
        parser.done();

        assertTrue("should generate a file ", new File("./reports/test_result_.html").exists());
    }
}
